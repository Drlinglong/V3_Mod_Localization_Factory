{
  "select_language_prompt": "Please select a language (1: English, 2: ‰∏≠Êñá): ",
  "language_set": "Language set to {lang_code}.",
  "language_loaded": "Language loaded: {lang_code}",
  "error_loading_lang": "Error loading language file: {error}",
  "preflight_success": "Project directories/files OK, found {libs} API libraries, found {keys} API keys, found {mods} Mods",
  "preflight_checking_environment": "Checking environment, this may take 1-2 minutes, please wait patiently...",
  "preflight_failed": "System check failed",
  "preflight_retry_prompt": "Please resolve the issues above and try again.",
  "api_lib_openai": "OpenAI",
  "api_lib_gemini": "Google Gemini",
  "api_lib_gemini_cli": "Google Gemini CLI",
  "api_lib_qwen": "Alibaba Cloud Qwen",
  "setup_welcome_message": "Welcome to Paradox Mod Localization Factory!",
  "setup_one_time_config": "This is the configuration wizard for first-time users.",
  "setup_checking_python": "üîç Checking Python environment...",
  "setup_python_version_too_low": "Python version too low: {version}",
  "setup_python_requires_38": "Requires Python 3.8 or higher",
  "setup_python_version_ok": "Python version OK: {version}",
  "setup_pip_available": "pip is available",
  "setup_pip_not_available": "pip is not available",
  "setup_python_check_failed": "Python environment check failed: {error}",
  "setup_installing_requirements": "üì¶ Installing project dependencies...",
  "setup_requirements_file_not_found": "requirements.txt file not found",
  "setup_requirements_installed": "Project dependencies installed successfully",
  "setup_requirements_install_failed": "Project dependencies installation failed",
  "setup_requirements_install_error": "Project dependencies installation error: {error}",
  "setup_select_api_provider": "Please select the AI translation service you want to use:",
  "setup_api_url": "Application URL",
  "setup_api_warning": "Important reminder: Applying for API keys requires account registration and bank card binding. Using APIs may incur costs. Please keep your API keys secure.",
  "setup_enter_choice": "Please enter your choice",
  "setup_invalid_choice": "Invalid choice, please try again",
  "setup_installing_api_package": "üì¶ Installing {provider} dependencies...",
  "setup_api_package_installed": "{provider} dependencies installed successfully",
  "setup_api_package_install_failed": "{provider} dependencies installation failed",
  "setup_api_package_install_error": "{provider} dependencies installation error: {error}",
  "setup_portable_environment_detected": "‚ÑπÔ∏è Portable environment detected - skipping dependency installation",
  "setup_api_package_preinstalled": "‚úÖ {provider} dependencies are pre-installed in the portable package",
  "setup_api_key_instructions": "üìù Next, you need to obtain a {provider} API key:",
  "setup_visit_url": "Visit",
  "setup_login_account": "Log in to your account",
  "setup_create_api_key": "Create API key according to prompts",
  "setup_copy_api_key": "Copy the generated API key",
  "setup_enter_api_key": "Please enter your {provider} API key",
  "setup_api_key_cannot_be_empty": "API key cannot be empty!",
  "setup_setting_env_var": "üîß Setting environment variable...",
  "setup_env_var_set_success": "Environment variable set successfully!",
  "setup_env_var_restart_required": "Environment variable will take effect after next restart",
  "setup_env_var_set_failed": "Environment variable setting failed!",
  "setup_manual_env_var_instruction": "Please manually set environment variable {env_key}",
  "setup_env_var_set_error": "Environment variable setting error: {error}",
  "setup_configuration_complete": "Configuration Complete!",
  "setup_dependencies_installed": "Dependencies installed",
  "setup_env_vars_set": "Environment variables set",
  "setup_api_configured": "API configuration complete",
  "setup_ready_to_use": "You can now use the project!",
  "setup_usage_instructions": "How to use:",
  "setup_double_click_run_bat": "Double-click \"run.bat\" to run the main program",
  "setup_env_var_restart_note": "Environment variables will take effect after next restart. If you need to use immediately, please reopen Command Prompt",
  "setup_follow_prompts": "Follow the prompts to select game and Mod",
  "setup_start_translation": "Start automatic translation!",
  "setup_tips": "Tips:",
  "setup_one_time_only": "This configuration only needs to be run once",
  "setup_no_reconfig_needed": "No need to reconfigure unless you reinstall your system or change computers",
  "setup_check_readme_if_issues": "If you encounter issues, please check README.md",
  "setup_env_vars_restart_note": "Environment variables will take effect after next restart. If you need to use immediately, please reopen Command Prompt",
  "setup_press_enter_to_exit": "Press Enter to exit...",
  "setup_python_install_instructions": "Please install Python 3.8 or higher first:",
  "setup_visit_python_download": "Visit https://www.python.org/downloads/",
  "setup_download_latest_python": "Download the latest Python version",
  "setup_install_with_path": "During installation, make sure to check \"Add Python to PATH\"",
  "setup_restart_installer": "After installation, run this file again",
  "setup_requirements_install_manual": "Please manually install dependencies: pip install -r requirements.txt",
  "setup_api_package_install_manual": "Please manually install API package: pip install --upgrade {package}",
  "setup_api_key_setup_manual": "Please manually set environment variable {env_key}",
  "setup_no_requirements_to_install": "No basic dependencies to install, will install selected API library directly",
  "scan_source_folder": "\n--- Scanning source folder [{dir}] ---",
  "select_mod_prompt": "Please select the Mod to localize:",
  "you_selected": "\nYou have selected: {mod_name}",
  "invalid_input_number": "Invalid input, please enter a number from the list.",
  "invalid_input_not_number": "Invalid input, please enter a number.",
  "error_no_mods_found": "Error: No mod folders found in directory '{dir}'.",
  "error_source_folder_not_found": "Error: Source directory '{dir}' not found.",
  "start_workflow": "\n--- Starting '{workflow_name}' workflow for: {mod_name} ---",
  "enter_choice_prompt": "Please enter the number for your choice: ",
  "api_client_init_success": "Gemini client initialized successfully, using model: {model_name}",
  "api_client_init_fail": "API client failed to initialize, terminating workflow.",
  "parsing_file": "\n--- Parsing file: {filename} ---",
  "extracted_texts": "Extracted {count} translatable texts.",
  "processing_batch": "Processing batch {batch_num} (contains {chunk_size} texts)...",
  "api_call_error": "An error occurred while processing the batch: {error}",
  "mismatch_error": "Error: Batch translation result count mismatch! Original: {original_count}, Translated: {translated_count}.",
  "writing_file_success": "File '{filename}' has been localized successfully.",
  "creating_fallback_file": "Warning: Translation failed. Creating a fallback file with original English text.",
  "fallback_file_created": "Fallback file created: {filename}",
  "fallback_creation_error": "Error creating fallback file: {error}",
  "no_translatable_text": "No translatable text found in the file. Copied file structure directly.",
  "processing_metadata": "\n--- Processing metadata.json ---",
  "metadata_not_found": "metadata.json not found, skipping.",
  "translating_mod_name": "Translating mod name: \"{text}...\"",
  "translating_mod_desc": "Translating mod short description: \"{text}...\"",
  "metadata_success": "metadata.json localized successfully.",
  "processing_assets": "\n--- Processing assets (thumbnail, descriptor, etc.) ---",
  "asset_copied": "Asset '{asset_name}' copied successfully.",
  "asset_not_found": "Asset '{asset_name}' not found, skipping.",
  "processing_thumbnail": "\n--- Processing thumbnail.png ---",
  "thumbnail_not_found": "thumbnail.png not found, skipping.",
  "thumbnail_copied": "thumbnail.png copied successfully.",
  "cleanup_start": "\n--- Starting cleanup of source Mod folder: {mod_name} ---",
  "cleanup_warning_detailed": "WARNING: This will permanently delete all files and folders from the source directory '{mod_name}' EXCEPT for '.metadata', 'localization', and 'thumbnail.png'.\nThis is useful for saving disk space after translation is complete.\nAre you sure you want to continue? (enter 'y' or 'yes' to confirm, press Enter to skip): ", 
  "cleanup_cancelled": "Operation cancelled.",
  "cleanup_deleting": "Deleting non-essential files and folders...",
  "cleanup_deleted_folder": "  Deleted folder: {item}",
  "cleanup_deleted_file": "  Deleted file: {item}",
  "cleanup_delete_error": "Error deleting {path}: {error}",
  "cleanup_success": "Source folder cleanup complete!",
  "ask_cleanup_prompt": "Do you want to clean up the source MOD folder '{mod_name}' to save disk space?\nThis will delete all files except '.metadata', 'localization', and 'thumbnail.png'.\nPlease enter Y or N: ",
  "enter_cleanup_choice": "Please enter your choice (Y or N): ",
  "cleanup_status_yes": "Will clean up source files",
  "cleanup_status_no": "Will not clean up source files",
  "executing_cleanup": "Executing source file cleanup...",
  "cleanup_completed": "Source file cleanup completed",
  "cleanup_error": "An error occurred during cleanup: {error}",
  "workflow_initial_translate_name": "Initial Translation",
  "select_source_language_prompt": "\nPlease select the source language:",
  "select_target_language_prompt": "\nPlease select the target language(s):",
  "target_option_all": "Translate to all other 10 languages", 
  "error_same_language": "Error: Target language cannot be the same as the source language.",
  "translating_to_language": "\n--- Translating to: {lang_name} ---",
  "getting_mod_context": "\n--- Getting Mod thematic context ---",
  "mod_name_identified": "Identified Mod Name: '{name}'",
  "prompt_for_extra_context": "(Optional) Enter additional info about this mod's theme (e.g. 'Sci-Fi', 'Economy'), or press Enter to skip: ",
  "final_context_is": "Final thematic context used: '{context}'",
  "error_getting_context": "Error getting mod context: {error}",
  "select_game_profile_prompt": "\nPlease select a game:",
  "unsupported_metadata": "Warning: Metadata processing is not yet supported for the game '{game_name}'.",
  "parallel_processing_start": "--- Detected {count} translation batches, starting parallel processing mode ---",
  "parallel_processing_end": "--- All batches have finished parallel processing ---",
  "warning_batch_failed": "Warning: Batch {batch_num} failed. The original English text for this batch will be used as a fallback.",
  "warning_partial_failure": "Warning: Some translation batches failed. Original English text has been used for the failed parts.",
  "retrying_batch": "Batch {batch_num} failed on attempt {attempt}/{max_retries}. Retrying in {delay} seconds...",
  "target_option_all_dynamic": "Translate to all other {count} languages",
	"target_option_custom": "Custom / Disguise Other Language...",
"prompt_custom_lang_name": "Enter the target language name (e.g., Italian): ",
"prompt_custom_lang_key": "Enter the Paradox language key to use/disguise as (e.g., l_italian or l_english): ",
"prompt_custom_lang_prefix": "Enter the desired folder prefix (e.g., IT-): ",
"entering_custom_mode": "--- Entering Custom Language Mode ---",
"select_api_provider_prompt": "Please select an API provider:",
  "qwen_china_hint": "(Recommended for users in Mainland China)",
  "deepseek_china_hint": "(Recommended for users in Mainland China)",
"workflow_completed": "Workflow completed!",
"glossary_loaded_success": "Glossary loaded successfully: {count} entries",
"glossary_file_not_found": "Glossary file not found: {path}",
"glossary_load_failed": "Failed to load glossary",
"glossary_terms_extracted": "Extracted {count} relevant terms from {text_count} texts",
"single_translation_glossary_injected": "Single translation: injected {count} glossary terms",
"batch_translation_glossary_injected": "Batch {batch_num}: injected {count} glossary terms",
"proofreading_tracker_init": "Proofreading tracker initialized, will generate {lang_name} version progress board",
"gbk_version_generated": "GBK encoding version generated: {path}",
"gbk_version_generation_fail": "Failed to generate GBK encoding version: {error}",
"proofreading_table_generated": "Proofreading progress table generated: {path}",
"proofreading_table_generation_fail": "Failed to generate proofreading progress table: {error}",
"auxiliary_glossary_selection_prompt": "Please select auxiliary glossaries to enable:",
"main_glossary_enabled": "Main glossary glossary.json enabled ({count} terms)",
"auxiliary_glossaries_detected": "Auxiliary glossaries detected:",
"auxiliary_glossary_option": "[{index}] {name} - {description} ({entry_count} terms)",
"select_all_auxiliary": "Enter 0 to enable all",
"no_auxiliary_glossary": "Enter N to use no auxiliary glossaries",
"enter_auxiliary_choice": "Please enter your choice (0, 1, 2... or N): ",
"invalid_auxiliary_choice": "Invalid choice, please enter a valid number or N",
"auxiliary_glossaries_loaded": "Loaded {count} auxiliary glossaries",
"no_auxiliary_glossaries_loaded": "No auxiliary glossaries loaded",
"fuzzy_matching_mode_prompt": "Please select fuzzy matching mode:",
"fuzzy_matching_strict": "[1] Strict Mode - No fuzzy matching ",
"fuzzy_matching_loose": "[2] Loose Mode - Enable fuzzy matching (tolerates spelling errors)",
"fuzzy_matching_hint": "If you don't know what this is, we recommend enabling fuzzy matching",
"enter_fuzzy_choice": "Please enter your choice (1 or 2): ",
"invalid_fuzzy_choice": "Invalid choice, please enter 1 or 2",
"fuzzy_mode_set": "Fuzzy matching mode set to: {mode}",
"fuzzy_matching_status_enabled": "Fuzzy matching enabled",
"fuzzy_matching_status_disabled": "Fuzzy matching disabled",
"project_overview_fuzzy_matching": "Fuzzy matching: {fuzzy_status}",
"project_overview_title": "=== Project Overview ===",
"project_overview_mod": "Target MOD: {mod_name}",
"project_overview_api": "API Provider: {provider}",
"project_overview_game": "Game Type: {game_name}",
"project_overview_source": "Source Language: {source_lang}",
"project_overview_target": "Target Language: {target_lang}",
"project_overview_cleanup": "Clean up extra files: {cleanup_status}",
"project_overview_glossary": "Glossary Configuration: {glossary_status}",
"confirm_translation_start": "Press Y to confirm and start translation, N to return to language selection: ",
"translation_confirmed": "Translation confirmed, starting execution...",
"returning_to_language_selection": "Returning to language selection...",
"cleanup_after_confirmation": "After translation, you will be asked whether to clean up extra files",
"main_glossary_not_found": "Main glossary not found, will proceed without glossary support",
"auxiliary_glossary_load_failed": "Failed to load auxiliary glossaries, will use main glossary only",
"no_glossaries_available": "No glossaries available, will proceed with API translation only",
"glossary_status_display": "Glossary status: {status}",
"glossary_status_main_only": "Main glossary only ({count} entries)",
"glossary_status_auxiliary_only": "Auxiliary glossaries only ({count} files)",
"glossary_status_combined": "Main glossary({main_count} entries) + Auxiliary glossaries({aux_count} files) = Total({total_count} entries)",
"glossary_status_none": "No glossaries available",
"logger_initialized": "Logger initialized and ready",
  "invalid_cleanup_choice": "Please enter Y or N",
  "cleanup_confirmed": "Cleanup confirmed. Deleting non-essential files...","invalid_confirm_choice": "Please enter Y or N",
"target_languages_multiple": "Multiple languages ({count} types)",
"glossary_status_combined_auxiliary": "Main glossary + {count} auxiliary glossaries",
"generating_proofreading_board": "Generating proofreading progress board...",
"proofreading_board_generated_success": "Proofreading progress board generated successfully",
"proofreading_board_generation_failed": "Failed to generate proofreading progress board",
"translation_workflow_completed": "Translation workflow completed!",
"output_folder_created": "Output folder: {folder}",
"metadata_processing_failed": "Metadata processing failed: {error}",
"no_file_data_for_proofreading": "No file data available, cannot generate proofreading progress table",
"proofreading_table_title": "Proofreading Progress Board for {mod_name} Mod Localization",
"validation_details": "Details",
"proofreading_status": "Status",
"proofreading_source_file": "Source File",
"proofreading_localized_file": "Localized File",
"proofreading_translated_lines": "Translated Lines",
"proofreading_progress": "Proofreading Progress",
"proofreading_notes": "Notes",
"proofreading_csv_filename": "proofreading_progress.csv",
"output_structure_created": "Output directory structure created successfully: {path}",
"output_structure_creation_failed": "Failed to create output directory structure: {error}",
"batch_completed": "Batch completed: {filename} - Batch {batch_num}",
"file_completed": "File completed: {filename}",
"all_files_processing_completed": "All files processing completed, processed {count} files total",
"batch_processing_failed": "Batch processing failed: {filename} - Batch {batch_num}: {error}",
"batch_failed_using_original": "Batch {batch_num} failed, using original text: {filename}",
"file_build_completed": "File build completed: {filename}",
"file_completion_processing_failed": "File completion processing failed: {filename}: {error}",
"batch_translation_failed": "Batch translation failed: {filename} - Batch {batch_num}: {error}",
"fuzzy_mode_strict": "Strict Mode",
"fuzzy_mode_loose": "Loose Mode",
"glossary_status_main_plus_aux": "Main glossary({main_count} entries) + Auxiliary glossaries({aux_count} files) = Total({total_count} entries)",
"glossary_status_aux_only": "Auxiliary glossaries only({aux_count} files)",
"glossary_merge_completed": "Glossary merged: {main_entries} main entries + {aux_entries} auxiliary entries = {total_entries} total",
"project_startup": "Project startup: {display_name} v{version}",
"project_engineering_name": "Engineering name: {name}",
"project_last_update": "Last Update: 2025.8.17",
"version_info_title": "Version Information",
"version_info_display_name": "Project Name: {display_name}",
"version_info_engineering_name": "Engineering Name: {engineering_name}",
"version_info_version": "Version: {version}",
"version_info_last_update": "Last Update: {last_update}",
  
  "thinking_enabled": "Thinking enabled (thinking_budget={budget})",
  "thinking_disabled": "Thinking disabled (thinking_budget=0)",
  "batch_thinking_enabled": "Batch {batch_num}: Thinking enabled (thinking_budget={budget})",
  "batch_thinking_disabled": "Batch {batch_num}: Thinking disabled (thinking_budget=0)",
  "single_translation_thinking_enabled": "Single translation: Thinking enabled (thinking_budget={budget})",
  "single_translation_thinking_disabled": "Single translation: Thinking disabled (thinking_budget=0)",
  
  "qwen_thinking_enabled": "Thinking enabled",
  "qwen_thinking_disabled": "Thinking disabled (added /no_think)",
  "qwen_batch_thinking_enabled": "Batch {batch_num}: Thinking enabled",
  "qwen_batch_thinking_disabled": "Batch {batch_num}: Thinking disabled (added /no_think)",
  "qwen_single_translation_thinking_enabled": "Single translation: Thinking enabled",
  "qwen_single_translation_thinking_disabled": "Single translation: Thinking disabled (added /no_think)",
  
  "validation_levels_explanation_title": "üìä Validation Level Explanation",
  "validation_levels_error_title": "üî¥ ERROR - Highest level, must fix:",
  "validation_levels_error_brackets": "   ‚Ä¢ Chinese characters in brackets: [‰∏≠ÊñáÂáΩÊï∞] ‚Üí Game crash",
  "validation_levels_error_concept": "   ‚Ä¢ Chinese characters in concept keys: [Concept('‰∏≠Êñákey', ...)] ‚Üí Cannot recognize",
  "validation_levels_error_variable": "   ‚Ä¢ Chinese characters in variable names: $‰∏≠ÊñáÂèòÈáè$ ‚Üí Display anomaly",
  "validation_levels_error_icon": "   ‚Ä¢ Chinese characters in icon tags: @‰∏≠ÊñáÂõæÊ†á! ‚Üí Cannot load",
  "validation_levels_warning_title": "üü° WARNING - Medium level, recommended to fix:",
  "validation_levels_warning_space": "   ‚Ä¢ Missing space after formatting commands: #bÁ≤ó‰ΩìÊñáÊú¨#! ‚Üí Should be #b Á≤ó‰ΩìÊñáÊú¨#!",
  "validation_levels_warning_unknown": "   ‚Ä¢ Unknown formatting commands: #bold ‚Üí Should be #b",
  "validation_levels_warning_unpaired": "   ‚Ä¢ Unpaired tags: #R red text ‚Üí Missing #!",
  "validation_levels_warning_color": "   ‚Ä¢ Color tag mismatch: ¬ßR red ¬ßY yellow ‚Üí No ¬ß!",
  "validation_levels_info_title": "üîµ INFO - Lowest level, recommended to check:",
  "validation_levels_info_tooltip": "   ‚Ä¢ Chinese characters in complex tooltip structures",
  "validation_levels_info_scope": "   ‚Ä¢ Chinese characters in scope formatting",
  
  "validation_csv_level_explanation": "üî¥ERROR=Crash üü°WARNING=Anomaly üîµINFO=Suggestion",
  "validation_csv_details_header": "üìä Validation Level Explanation:",
  "validation_csv_details_error": "üî¥ ERROR: Must fix (Game crash/Cannot recognize)",
  "validation_csv_details_warning": "üü° WARNING: Recommended to fix (Display anomaly)",
  "validation_csv_details_info": "üîµ INFO: Recommended to check (Minor impact)",
  
  "error_source_dir_not_exists": "Source directory does not exist: {dir}",
  "error_source_dir_instructions": "Please ensure one of the following conditions is met:",
  "error_source_dir_condition1": "1. Run the program from the project root directory",
  "error_source_dir_condition2": "2. The source_mod folder exists and contains mod files",
  "error_source_dir_condition3": "3. Check if the folder name is correct (should be 'source_mod')",
  "error_permission_denied": "Permission denied, cannot access directory: {dir}",
  "error_scan_directory_unknown": "Unknown error occurred while scanning directory: {error}",
  "error_scan_directory": "Error occurred while scanning directory: {error}",
  "user_cancelled_selection": "User cancelled selection",
  "error_add_mods_to_source_folder": "Please add mod folders to translate in the source_mod folder",
  
  "no_files_to_process": "No files to process",
  "file_translation_completed": "File translation completed: {filename}",
  "file_translation_failed": "File translation failed: {filename}",
  "file_processing_failed": "File processing failed: {filename}, error: {error}",
  "translation_result_mismatch": "Translation result count mismatch: {filename}, original: {original_count}, translated: {translated_count}",
  "file_translation_error": "File translation error: {filename}, error: {error}",
  
  "validation_vic3_simple_concept_chinese": "Non-ASCII characters found in simple `[concept]` links.",
  "validation_vic3_concept_key_chinese": "Non-ASCII characters found in the 'key' part of `[Concept('key', ...)]` function. The 'key' must be in English.",
  "validation_vic3_scope_key_chinese": "Non-ASCII characters found in the 'key' part of `[SCOPE.sType('key')]` function. The 'key' must be in English.",
  "validation_vic3_icon_key_chinese": "Non-ASCII characters found in the 'key' part of icon tag `@key!`.",
  "validation_vic3_formatting_missing_space": "Formatting command `#{key}` is missing a required space after it.",
  "validation_vic3_unknown_formatting": "Unknown formatting command `#{key}`.",
  "validation_vic3_tooltippable_chinese": "Non-ASCII characters found in the 'key' part of `#tooltippable`. The key must be in English.",
  "validation_vic3_formatting_found_at": "Found at: '{found_text}', should be followed by a space.",
  "validation_vic3_unsupported_formatting": "Victoria 3 does not support the formatting command: '{found_text}'.",
  "validation_vic3_tooltippable_found_in": "Found banned characters '{banned_chars}' in '<{key_content}>'",
  
  "validation_stellaris_brackets_chinese": "Non-ASCII characters found in square brackets `[...]`. This is usually a translation error and may cause the game to fail to recognize commands.",
  "validation_stellaris_dollar_vars_chinese": "Non-ASCII characters found in dollar sign `$...$` variables. Variable names must retain their original text.",
  "validation_stellaris_pound_icons_chinese": "Non-ASCII characters found in pound sign `¬£...¬£` icon tags. Icon names must retain their original text.",
  "validation_stellaris_color_tags_mismatch": "Color tag `¬ß...` and end marker `¬ß!` count mismatch, which may cause text display anomalies.",
  "validation_stellaris_color_tags_count": "Found {start_count} start tags, but {end_count} end markers.",
  
  "validation_eu4_brackets_chinese": "Non-ASCII characters found in square bracket `[...]` commands.",
  "validation_eu4_legacy_vars_chinese": "Non-ASCII characters found in traditional `$KEY$` variables.",
  "validation_eu4_pound_icons_chinese": "Non-ASCII characters found in icon tags `¬£key¬£`.",
  "validation_eu4_country_flags_chinese": "Non-ASCII characters found in country flag tags `@TAG`.",
  "validation_eu4_color_tags_mismatch": "Color tag `¬ß...` and end marker `¬ß!` count mismatch, which may cause text display anomalies.",
  "validation_eu4_currency_symbol_detected": "Special currency symbol `¬§` detected.",
  "validation_eu4_currency_symbol_note": "Ensure this symbol is properly preserved.",
  
  "validation_hoi4_namespaces_chinese": "Non-ASCII characters found in namespace `[Scope.Function]`, which may cause game crashes.",
  "validation_hoi4_formatting_vars_chinese": "Non-ASCII characters found in the variable part of formatting variables `[?variable|...]`.",
  "validation_hoi4_nested_strings_chinese": "Non-ASCII characters found in nested strings or variables `$key$`.",
  "validation_hoi4_icon_tags_chinese": "Non-ASCII characters found in icon tags `¬£icon_name`.",
  "validation_hoi4_country_flags_chinese": "Non-ASCII characters found in country flag tags `@TAG`.",
  "validation_hoi4_localization_formatters_chinese": "Non-ASCII characters found in standalone `formatter|token` formatters.",
  "validation_hoi4_color_tags_mismatch": "Color tag `¬ß...` and end marker `¬ß!` count mismatch, which may cause text display anomalies.",
  
  "validation_ck3_scopes_functions_chinese": "Non-ASCII characters found in square bracket `[...]` commands.",
  "validation_ck3_concept_key_chinese": "Non-ASCII characters found in the 'key' part of `[Concept('key', ...)]` function. The 'key' must be in English.",
  "validation_ck3_trait_title_key_chinese": "Non-ASCII characters found in the 'key' part of `GetTrait` or `GetTitleByKey` functions.",
  "validation_ck3_dollar_vars_chinese": "Non-ASCII characters found in dollar sign `$key$` variables.",
  "validation_ck3_icon_key_chinese": "Non-ASCII characters found in the 'key' part of icon tags `@key!`.",
  "validation_ck3_formatting_tags_mismatch": "Formatting command start tag `#key` and end marker `#!` count mismatch.",
  "validation_ck3_formatting_missing_space": "Formatting command `#{key}` may be missing a required space after it.",
  "validation_ck3_unknown_formatting": "Unknown formatting command `#{key}`.",
  "validation_ck3_formatting_found_at": "Found at: '{found_text}'",
  "validation_ck3_unsupported_formatting": "CK3 does not support the formatting command: '{found_text}'.",
  
  "validation_generic_banned_chars_found": "Found banned characters '{banned_chars}' in '{match_text}'",
  "validation_generic_format_error": "Format error: '{content}'",
  "validation_generic_color_tags_count": "Found {start_count} start tags, but {end_count} end markers.",
  
  "post_processing_start": "\n--- Starting Post-Processing Format Validation ---",
  "post_processing_game": "Validating localization syntax format for {game_name}...",
  "post_processing_scanning": "Scanning {file_count} translated files...",
  "post_processing_validation_complete": "Format validation completed!",
  "post_processing_summary": "Preliminary screening results: {valid_count} files have intact structure, {error_count} files have structural issues",
  "post_processing_no_issues": "‚úÖ All files passed format validation, no syntax issues found",
  "post_processing_issues_found": "‚ö†Ô∏è Format issues detected, manual review recommended:",
  "post_processing_file_issue": "File {file_index}: {filename} (Line {line_number})",
  "post_processing_issue_details": "  - {level}: {message}",
  "post_processing_issue_details_with_details": "  - {level}: {message} - {details}",
  "post_processing_csv_generated": "Format validation report generated: {path}",
  "post_processing_csv_generation_failed": "Failed to generate format validation report: {error}",
  "post_processing_validation_error": "Error occurred during post-processing validation: {error}",
  "post_processing_validation_level_error": "ERROR",
  "post_processing_validation_level_warning": "WARNING",
  "post_processing_validation_level_info": "INFO",
  "post_processing_completion_summary": "Post-processing validation completed - Total: {total_files} files, Valid: {valid_files}, Issues: {files_with_issues}, Errors: {total_errors}, Warnings: {total_warnings}",
  
  "gemini_cli_handler": "Gemini CLI Handler",
  "gemini_cli_verify_availability": "Verify Gemini CLI availability",
  "gemini_cli_available": "Gemini CLI available: {version}",
  "gemini_cli_version_check_failed": "Gemini CLI version check failed: {error}",
  "gemini_cli_not_found": "Gemini CLI not found, please ensure it's installed: {cli_path}",
  "gemini_cli_timeout": "Gemini CLI response timeout, please check installation status",
  "gemini_cli_execute_prompt": "Execute single prompt and return result",
  "gemini_cli_translation_success": "CLI translation successful, took {elapsed_time:.2f} seconds",
  "gemini_cli_call_failed": "CLI call failed: {error}",
  "gemini_cli_call_timeout": "CLI call timeout",
  "gemini_cli_translation_exception": "CLI translation exception: {error}",
  "gemini_cli_execute_batch": "Execute batch prompts and return result list",
  "gemini_cli_batch_exception": "CLI batch translation exception: {error}",
  "gemini_cli_parse_response": "Parse CLI JSON response",
  "gemini_cli_return_error": "CLI returned error: {error}",
  "gemini_cli_no_candidates": "Gemini model {model_name} generated no candidate responses (candidates: 0).",
  "gemini_cli_finish_reason": " Finish reason: {finish_reason}.",
  "gemini_cli_safety_ratings": " Safety ratings: {safety_ratings}.",
  "gemini_cli_safety_warning": "üö® Gemini API rejected response due to safety settings. Please check if input text contains sensitive words.",
  "gemini_cli_prompt_too_long": " This might be because the prompt is too long or content triggered safety restrictions.",
  "gemini_cli_invalid_response": "CLI returned invalid response content",
  "gemini_cli_response_format_error": "CLI response format error: missing response field",
  "gemini_cli_not_json": "CLI response is not JSON format, attempting text parsing",
  "gemini_cli_parse_batch": "Parse batch translation JSON response",
  "gemini_cli_batch_incomplete": "Batch translation parsing incomplete, expected {expected_count}, got {actual_count}",
  "gemini_cli_missing_lines": "Missing translation line numbers: {missing_numbers}",
  "gemini_cli_found_lines": "Found translation line numbers: {found_numbers}",
  "gemini_cli_parse_problem": "üö® Batch translation parsing problem: line numbers complete but content parsing failed",
  "gemini_cli_empty_content": "‚ùå Empty content lines: {empty_lines} (Gemini returned numbers but no translation content)",
  "gemini_cli_invalid_content": "‚ö†Ô∏è Invalid content lines: {invalid_lines} (Gemini returned placeholders instead of real translations)",
  "gemini_cli_short_content": "üìù Short content lines: {short_lines} (translation content less than 2 characters)",
  "gemini_cli_suggestion": "üí° Suggestion: These {total_problems} problem lines will be filled with empty strings, translation will continue",
  "gemini_cli_debug_suggestion": "üí° To view original response, temporarily enable debug logging",
  "gemini_cli_problem_analysis": "üîç Starting problem location analysis...",
  "gemini_cli_parse_failed": "Batch translation parsing failed, trying backup parsing method",
  "gemini_cli_parse_failed_exception": "Batch translation parsing failed",
  "gemini_cli_cannot_parse": "Cannot parse CLI response",
  "gemini_cli_analyze_problems": "Analyze problem content, try to find specific causes of translation failure",
  "gemini_cli_analyze_lines": "üéØ Analyzing {count} problem lines...",
  "gemini_cli_empty_line": "Line {line_num}: completely empty content",
  "gemini_cli_incomplete_line": "Line {line_num}: source file incomplete (author didn't finish translating this line)",
  "gemini_cli_invalid_placeholder": "Line {line_num}: invalid placeholder '{invalid_content}'",
  "gemini_cli_short_line": "Line {line_num}: content too short '{short_content}'",
  "gemini_cli_problem_details": "üìã Detailed analysis of problem lines:",
  "gemini_cli_more_problems": "   ... and {count} more problem lines",
  "gemini_cli_suggestions": "üí° Targeted suggestions:",
  "gemini_cli_empty_suggestion": "   - {count} empty content lines: Gemini might have encountered untranslatable special content",
  "gemini_cli_incomplete_suggestion": "   - {count} incomplete source file lines: author didn't finish translating these lines, Gemini correctly identified and marked them",
  "gemini_cli_invalid_suggestion": "   - {count} invalid content lines: Gemini returned placeholders, suggest checking original content",
  "gemini_cli_short_suggestion": "   - {count} short content lines: might be single characters or special symbols",
  "gemini_cli_solutions": "üîß Suggested solutions:",
  "gemini_cli_solution_1": "   1. Check auto-generated debug files, compare original input and Gemini response",
  "gemini_cli_solution_2": "   2. Check original text content corresponding to problem lines",
  "gemini_cli_solution_3": "   3. Consider adjusting prompt or batch processing strategy",
  "gemini_cli_solution_4": "   4. If problems persist, try translating problem lines individually",
  "gemini_cli_analysis_failed": "Problem analysis failed: {error}",
  "gemini_cli_get_stats": "Get usage statistics",
  "gemini_cli_translation_complete": "CLI translation complete: {text}",
  "gemini_cli_translation_failed": "CLI translation failed: {error}",
  "setup_desc_gemini": "Uses the gemini-2.5-flash model. Balanced performance in speed, quality, and cost.",
  "setup_desc_openai": "Uses the gpt-5-mini model. Sufficient for the vast majority of translation tasks.",
  "setup_desc_deepseek": "Uses the DeepSeek-V3.2-Exp model. Friendly for users in China.",
  "setup_desc_qwen": "Uses the qwen-plus model. Friendly for users in China.",
  "setup_desc_grok": "Uses the grok-4-fast-reasoning model. Extremely cost-effective.",
  "setup_desc_ollama": "Run models on your own computer, completely free, but requires good hardware.",
  "setup_desc_gemini_cli": "Authenticates via Google account, no API Key required, suitable for developers.",
  "setup_press_enter_to_return": "Press Enter to return to the main menu...",
  "setup_configuration_complete_provider": "üéâ {provider} configuration complete!",
  "setup_configure_another_provider": "Configure another provider?",
  "aux_glossary_not_found": "Auxiliary glossary not found",
  "enter_workflow_completed_choice": "Please enter your choice (Y or N): ",
  "error_invalid_list_number": "Invalid selection, please enter a number from the list.",
  "error_invalid_not_number": "Invalid input, please enter a number.",
  "gemini_cli_model_selection_prompt": "Please select the Gemini CLI model to use:",
  "glossary_validator_warning": "File '{file_path}' (Batch #{batch_id}): Source term '{source_term}' (appeared {source_count} times) may not be correctly translated to '{target_term}' (appeared {translated_count} times).",
  "main_glossary_not_loaded": "Main glossary not loaded",
  "ollama_single_thread_warning": "Warning: Ollama is running in single-thread mode to prevent system overload. Translation speed may be slower.",
  "post_process_validation_complete": "Format validation completed!",
  "post_process_validation_start": "\n--- Starting Post-Processing Format Validation ---",
  "preflight_error_missing_dir": "Missing required directory: {dir_path}",
  "preflight_error_missing_file": "Missing required file: {file_path}",
  "preflight_error_no_api_keys": "No API keys found in environment variables.",
  "preflight_error_no_api_libs": "No available AI translation libraries found.",
  "preflight_error_source_mod_empty": " directory is empty, please add Mod files.",
  "preflight_error_source_mod_missing": " directory does not exist.",
  "preflight_failed_header": "\u274c Environment check failed:",
  "preflight_success_header": "\u2705 Environment check passed",
  "program_exit_thank_you": "Program has exited, thank you for using!",
  "select_language_all_selected": "Selected to translate to all other {count} languages.",
  "select_language_single_selected": "Selected: {name}",
  "setup_dev_env_detected": "[Development Environment] Detected development environment - please ensure you have the corresponding Python packages installed.",
  "setup_portable_env_detected": "[Portable Environment] Detected portable environment - all dependencies are pre-installed and do not require additional installation.",
  "shell_mode_confirm_selection": "Shell mode selected: {custom_name} will be disguised as {shell_name}",
  "shell_mode_display_name": "{custom_name} (Shell: {shell_name})",
  "shell_mode_entering": "--- Entering Shell Mode ---",
  "shell_mode_error_name_empty": "Custom language name cannot be empty.",
  "shell_mode_prompt_choice": "Please enter your choice: ",
  "shell_mode_prompt_name": "Please enter the name of the custom language (e.g., 'Italiano'): ",
  "shell_mode_prompt_shell_lang": "Please select a 'shell' language (e.g., English), the generated files will use this language's format:",
  "unexpected_error_see_logs": "An unexpected error occurred, please check the logs.",
  "validation_error_bracket_chinese": "Chinese characters found within square brackets, this may cause a game crash.",
  "validation_error_icon_chinese": "Chinese characters found in icon tags.",
  "validation_error_nested_string_chinese": "Chinese characters found in nested strings.",
  "validation_error_variable_chinese": "Chinese characters found in variables.",
  "validation_generic_unsupported_formatting": "Unsupported formatting command: '{found_text}'.",
  "validation_summary_errors": "Format validation complete - {game_name}: Found {errors} errors, {warnings} warnings",
  "validation_summary_success": "Format validation complete - {game_name}: All text formats are correct",
  "validation_summary_warnings": "Format validation complete - {game_name}: Found {warnings} warnings",
  "validation_unknown_game": "Unknown game ID: {game_id}",
  "validation_warning_country_tag": "Country tag format is incorrect.",
  "validation_warning_format_command": "Formatting command format is incorrect.",
  "validation_warning_suspicious_chars": "Suspicious non-ASCII characters found within square brackets.",
  "validation_warning_text_format": "Text formatting command format is incorrect.",
  "validation_warning_tooltip_key": "Tooltip key format is incorrect.",
  "workflow_completed_ask_next": "Workflow completed. Continue to translate other Mods? (Y/N)",
  "cjk_glossary_warning": "[Important Note]: Since the glossary validator is currently optimized for languages that use spaces for word separation, such as English, for languages like Chinese and Japanese, it may produce false positives or negatives due to the inability to recognize word boundaries. Please judge the above warnings in context.",
  "unpacking_wrapped_response": "Wrapped response detected, attempting to unpack...",
  "batch_success": "Batch {batch_num} translated successfully on attempt {attempt}.",
  "gemini_cli_batch_success": "Gemini CLI Batch {batch_num} translated successfully on attempt {attempt} in {elapsed_time:.2f} seconds.",
  "debug_file_header": "=== Batch Translation Parsing Failure Debug Information ===",
  "debug_file_time": "Time: {time}",
  "debug_file_error_type": "Error Type: {error_type}",
  "debug_file_details": "Details: {details}",
  "debug_file_raw_response": "Raw Response Text:",
  "debug_file_saved": "üîç Parsing failure debug file saved: {debug_file}",
  "debug_file_prompt": "üìÅ Please check the debug file for the original response content",
  "debug_file_save_failed": "Failed to save debug file: {e}",
  "parser_unpack_json_not_list_warning": "Warning: After unpacking, the JSON returned by the model is not a list. Content: {nested_data}",
  "parser_unpack_json_decode_error": "Error: Failed to parse JSON after unpacking. Content before unpacking:\n-----\n{nested_text}\n-----",
  "parser_json_not_list_warning": "Warning: The JSON returned by the model is not a list. Content: {parsed_data}",
  "parser_unknown_logic_error": "Error: Unknown parsing logic branch, 'translations' variable was not assigned.",
  "parser_translation_count_mismatch": "Warning: Translation count mismatch. Expected {expected_count}, got {actual_count}",
  "parser_json_decode_error": "Error: JSON parsing failed. Original returned text:\n-----\n{response_text}\n-----",
  "parser_unknown_error": "Error: An unknown error occurred while parsing the response: {e}",
  "validator_error_cannot_create_spec": "Cannot create module spec for path: {rules_path}",
  "validator_error_rules_not_found": "Rules file not found: {rules_path}",
  "validator_error_cannot_load_rules": "Cannot load rules from Python module: {rules_path}, Error: {e}",
  "validator_error_regex_error": "Regex error in rule '{rule_name}': {e}, Pattern: {pattern}",
  "validator_error_executing_rule": "Error executing rule '{rule_name}': {e}",
  "validator_warning_unknown_check_function": "Rule '{rule_name}' specifies an unknown check function: '{check_function_name}'",
  "validator_warning_cannot_load_i18n": "Cannot load internationalization: {e}",
  "validation_generic_tags_count": "Found {start_count} start tags, but {end_count} end markers.",
  "glossary_consistency_warning_header": "Glossary consistency check found potential issues:",
  "cli_select_glossary_prompt": "\nLoad auxiliary glossaries?",
  "cli_select_glossary_yes": "Yes",
  "cli_select_glossary_no": "No (Default, use main glossary only)",
  "cli_glossary_loading_all": "Loading all available glossaries...",
  "cli_glossary_available": "Available glossaries for '{game_name}':",
  "cli_glossary_main_suffix": "(Main)",
  "cli_glossary_select_prompt": "Enter the numbers of the auxiliary glossaries you want to load (comma-separated), or press Enter to skip:",
  "cli_glossary_selected": "Selected glossaries to load: {glossary_names}",
  "cli_glossary_not_found": "Error: Glossary with number {glossary_index} not found.",
  "cli_glossary_invalid_input": "Invalid input. Please enter numbers or comma-separated numbers.",
  "log_selected_provider": "Selected provider: {provider}",
  "log_warn_descriptor_not_found": "Mod descriptor file not found at {path}. Cannot determine remote_file_id.",
  "log_warn_skip_archive_missing_id": "Skipping archive process due to missing remote_file_id.",
  "log_found_glossaries_for_game": "Found {count} available glossaries for game_id: {game_id}",
  "log_glossary_loaded_from_selected": "Successfully loaded {entries_count} entries from {glossaries_count} selected glossaries.",
  "log_warn_remote_id_not_in_file": "remote_file_id not found in {path}.",
  "log_error_parsing_mod_file": "Error parsing mod file {path}: {error}",
  "prompt_workshop_id_title": "Please enter Workshop ID (Optional)",
  "prompt_workshop_id_desc": "This ID is used to save translation results to the history database. You can find it in the URL of the Mod's Steam Workshop page.",
  "prompt_workshop_id_skip": "Press Enter to attempt automatic extraction from files. If it fails, the archive feature will be disabled.",
  "prompt_workshop_id_enter": "Please enter Workshop ID: ",
  "overview_workshop_id_manual": "Workshop ID (Manual): {id}",
  "overview_workshop_id_auto": "Workshop ID (Auto-extract attempt)",
  "overview_workshop_id_disabled": "Workshop ID (Not provided, archiving disabled)",
  "project_overview_workshop_id": "Workshop ID Status: {status}",
  "log_info_workshop_id_auto_found": "Workshop ID '{id}' automatically found in mod files.",
  "log_warn_workshop_id_auto_fail": "Could not automatically find Workshop ID. You can enter it manually in the next step to enable archiving.",
  "log_info_archive_entry_created": "Created new archive entry for mod '{mod_name}' (mod_id: {mod_id}, remote_file_id: {remote_file_id}).",
  "log_error_archive_integrity": "Failed to get or create mod_id due to an unexpected integrity error.",
  "log_error_db_get_create_mod_id": "Database error in get_or_create_mod_entry: {error}",
  "log_warn_asset_exists": "Asset '{item}' already exists at destination, skipping.",
  "log_info_archived_source_entries": "Archived {count} source entries for version_id {version_id}.",
  "log_info_created_source_version": "Created new source version {version_id} for mod_id {mod_id} with hash {hash}.",
  "log_info_db_connected": "Successfully connected to mods cache database at {path}",
  "log_error_db_connect": "Error connecting to mods cache database: {error}",
  "log_error_db_create_source_version": "Database error in create_source_version: {error}",
  "log_warn_no_translations_to_archive": "No translations to archive.",
  "log_info_archived_updated_translations": "Archived/Updated {count} translated entries for language '{lang_code}'.",
  "log_error_db_archive_results": "Database error in archive_translated_results for language '{lang_code}': {error}",
  "log_info_db_connection_closed": "Mods cache database connection closed.",
  "log_info_source_version_exists": "Source version already exists: {hash} (version_id: {version_id})",
  "validation_residual_punctuation_found": "Residual source language punctuation detected.",
  "validation_residual_punctuation_details": "Found the following punctuations that should have been converted: {punctuations}",
  "log.tag_analysis.starting_dynamic_validation": "Starting dynamic tag analysis for post-processing validation...",
  "log.tag_analysis.starting_mod_validation": "Starting mod tag analysis for dynamic validation...",
  "log.tag_analysis.loaded_official_tags": "Successfully loaded {count} official tags from '{path}'.",
  "log.tag_analysis.found_unique_tags": "Found {count} unique tags in the mod.",
  "log.tag_analysis.no_custom_tags": "No custom tags found in the mod. All tags conform to the official codex.",
  "log.tag_analysis.final_whitelist": "Final combined whitelist for this session contains {count} tags."
}